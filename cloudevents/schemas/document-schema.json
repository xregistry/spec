{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://xregistry.io/schema/endpoints-messagegroups-schemagroups",
  "properties": {
    "endpoints": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/endpoint"
      }
    },
    "messagegroups": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/messagegroup"
      }
    },
    "schemagroups": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/schemagroup"
      }
    }
  },
  "definitions": {
    "message": {
      "type": "object",
      "properties": {
        "messageid": {
          "type": "string",
          "description": "ID of the message object"
        },
        "name": {
          "type": "string",
          "description": "Name of the object"
        },
        "epoch": {
          "type": "integer",
          "description": "Epoch time of the object creation"
        },
        "self": {
          "type": "string",
          "format": "uri",
          "description": "URL of the object"
        },
        "xid": {
          "type": "string",
          "format": "uri",
          "description": "Relative URL of the object"
        },
        "description": {
          "type": "string",
          "description": "Description of the object"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "URI of the documentation of the object"
        },
        "labels": {
          "type": "object",
          "description": "Labels for the object"
        },
        "createdat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object creation"
        },
        "modifiedat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object modification"
        },
        "basemessageurl": {
          "type": "string",
          "format": "uri",
          "description": "Reference to a base definition for this definition, either via a (relative) URL or a fragment identifier. The base definition is overridden by this definition. If not present, this definition does not override any base definition"
        },
        "dataschemaformat": {
          "type": "string",
          "description": "The schema format applicable to the message payload, equivalent to the 'format' attribute of the schema registry"
        },
        "dataschema": {
          "type": "object",
          "description": "The inline schema for the message payload, equivalent to the 'schema' attribute of the schema registry"
        },
        "dataschemauri": {
          "type": "string",
          "format": "uri",
          "description": "The URI of the schema for the message payload, equivalent to the 'schemaurl' attribute of the schema registry"
        },
        "datacontenttype": {
          "type": "string",
          "description": "The content type for the message payload"
        }
      },
      "allOf": [
        {
          "oneOf": [
            {
              "properties": {
                "envelope": {
                  "type": "string",
                  "description": "Message envelope format identifier. This attribute MUST be the same as the 'envelope' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "None"
                  ],
                  "default": "None"
                }
              }
            },
            {
              "properties": {
                "envelope": {
                  "type": "string",
                  "description": "Message envelope format identifier. This attribute MUST be the same as the 'envelope' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "CloudEvents/1.0"
                  ]
                },
                "envelopemetadata": {
                  "type": "object",
                  "description": "CloudEvents metadata constraints",
                  "properties": {
                    "specversion": {
                      "type": "object",
                      "description": "CloudEvents spec version",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "CloudEvents spec version"
                        },
                        "required": {
                          "type": "boolean"
                        }
                      }
                    },
                    "id": {
                      "type": "object",
                      "description": "CloudEvents id",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "CloudEvents id value template"
                        },
                        "required": {
                          "type": "boolean"
                        }
                      }
                    },
                    "type": {
                      "type": "object",
                      "description": "CloudEvents type",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "CloudEvents type value template"
                        },
                        "required": {
                          "type": "boolean"
                        }
                      }
                    },
                    "source": {
                      "type": "object",
                      "description": "CloudEvents source",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "CloudEvents source value template"
                        },
                        "required": {
                          "type": "boolean"
                        }
                      }
                    },
                    "subject": {
                      "type": "object",
                      "description": "CloudEvents subject",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "CloudEvents subject value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "CloudEvents subject required"
                        }
                      }
                    },
                    "time": {
                      "type": "object",
                      "description": "The timestamp of when the event happened",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "The timestamp value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "The timestamp required"
                        }
                      }
                    },
                    "dataschema": {
                      "type": "object",
                      "description": "The uri of the schema that the event payload adheres to. If the dataschema attribute is not present, it MUST be interpreted as no schema. An application MAY assign a meaning to the dataschema attribute if it is not present by default",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "format": "uri-template",
                          "description": "The uri value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "The uri required"
                        }
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object",
                    "description": "CloudEvent extension property",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "description": "The value type"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value template"
                      },
                      "required": {
                        "type": "boolean",
                        "description": "Whether the extension is required"
                      }
                    }
                  }
                },
                "envelopeoptions": {
                  "type": "object",
                  "description": "Envelope metadata constraints",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Whether CloudEvents 'binary' or 'structure' mode will be used"
                    },
                    "format": {
                      "type": "string",
                      "description": "The media type format used to serialize the CloudEvent in the case of mode=structured"
                    }
                  }
                }
              },
              "required": [
                "envelope"
              ]
            }
          ]
        },
        {
          "oneOf": [
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "None"
                  ],
                  "default": "None"
                }
              }
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "AMQP/1.0"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "AMQP message metadata constraints",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "properties": {
                        "message_id": {
                          "type": "object",
                          "description": "AMQP message-id",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP message-id value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP message-id value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP message-id required"
                            }
                          }
                        },
                        "user_id": {
                          "type": "object",
                          "description": "AMQP user-id",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP user-id value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP user-id value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP user-id required"
                            }
                          }
                        },
                        "to": {
                          "type": "object",
                          "description": "AMQP to",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP to value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP to value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP to required"
                            }
                          }
                        },
                        "subject": {
                          "type": "object",
                          "description": "AMQP subject",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP subject value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP subject value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP subject required"
                            }
                          }
                        },
                        "reply_to": {
                          "type": "object",
                          "description": "AMQP reply-to",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP reply-to value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP reply-to value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP reply-to required"
                            }
                          }
                        },
                        "correlation_id": {
                          "type": "object",
                          "description": "AMQP correlation-id",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP correlation-id value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP correlation-id value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP correlation-id required"
                            }
                          }
                        },
                        "content_type": {
                          "type": "object",
                          "description": "AMQP content-type",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP content-type value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP content-type value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP content-type required"
                            }
                          }
                        },
                        "content_encoding": {
                          "type": "object",
                          "description": "AMQP content-encoding",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP content-encoding value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP content-encoding value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP content-encoding required"
                            }
                          }
                        },
                        "absolute_expiry_time": {
                          "type": "object",
                          "description": "AMQP absolute-expiry-time",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP absolute-expiry-time value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP absolute-expiry-time value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP absolute-expiry-time required"
                            }
                          }
                        },
                        "group_id": {
                          "type": "object",
                          "description": "AMQP group-id",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP group-id value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP group-id value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP group-id required"
                            }
                          }
                        },
                        "group_sequence": {
                          "type": "object",
                          "description": "AMQP group-sequence",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP group-sequence value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP group-sequence value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP group-sequence required"
                            }
                          }
                        },
                        "reply_to_group_id": {
                          "type": "object",
                          "description": "AMQP reply-to-group-id",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "description": "AMQP reply-to-group-id value type"
                            },
                            "value": {
                              "type": "string",
                              "description": "AMQP reply-to-group-id value template"
                            },
                            "required": {
                              "type": "boolean",
                              "description": "AMQP reply-to-group-id required"
                            }
                          }
                        }
                      }
                    },
                    "application_properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "The application property type"
                          },
                          "value": {
                            "type": "string",
                            "description": "The application property value template"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "The application property required"
                          }
                        }
                      }
                    },
                    "message_annotations": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "The message annotation type"
                          },
                          "value": {
                            "type": "string",
                            "description": "The message annotation value"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Whether the message annotation is required"
                          }
                        }
                      }
                    },
                    "delivery_annotations": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "The annotation type"
                          },
                          "value": {
                            "type": "string",
                            "description": "The delivery annotation value"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Whether the annotation is required"
                          }
                        }
                      }
                    },
                    "header": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "AMQP header type"
                          },
                          "value": {
                            "type": "string",
                            "description": "AMQP header value"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "AMQP header required"
                          }
                        }
                      }
                    },
                    "footer": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "AMQP footer type"
                          },
                          "value": {
                            "type": "string",
                            "description": "AMQP footer value"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "AMQP footer required"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "MQTT/3.1.1"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "MQTT message metadata constraints",
                  "properties": {
                    "qos": {
                      "type": "object",
                      "description": "MQTT qos",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "MQTT qos value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT qos value required"
                        }
                      }
                    },
                    "retain": {
                      "type": "object",
                      "description": "MQTT retain",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "boolean",
                          "description": "MQTT retain value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT retain value required"
                        }
                      }
                    },
                    "topic_name": {
                      "type": "object",
                      "description": "MQTT topic-name",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "MQTT topic-name value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT topic-name value required"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "MQTT/5.0"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "MQTT message metadata constraints",
                  "properties": {
                    "qos": {
                      "type": "object",
                      "description": "MQTT qos",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "integer",
                          "description": "MQTT qos value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT qos value required"
                        }
                      }
                    },
                    "retain": {
                      "type": "object",
                      "description": "MQTT retain",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "boolean",
                          "description": "MQTT retain value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT retain value required"
                        }
                      }
                    },
                    "topic_name": {
                      "type": "object",
                      "description": "MQTT topic-name",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "MQTT topic-name value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT topic-name value required"
                        }
                      }
                    },
                    "message_expiry_interval": {
                      "type": "object",
                      "description": "MQTT message-expiry-interval",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "integer",
                          "description": "MQTT message-expiry-interval value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT message-expiry-interval value required"
                        }
                      }
                    },
                    "response_topic": {
                      "type": "object",
                      "description": "MQTT response-topic",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "MQTT response-topic value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT response-topic value required"
                        }
                      }
                    },
                    "correlation_data": {
                      "type": "object",
                      "description": "MQTT correlation-data",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "MQTT correlation-data value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT correlation-data value required"
                        }
                      }
                    },
                    "content_type": {
                      "type": "object",
                      "description": "MQTT content-type",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "description": "MQTT content-type value template"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "MQTT content-type value required"
                        }
                      }
                    },
                    "user_properties": {
                      "type": "array",
                      "description": "MQTT user-properties",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "MQTT user-property name"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string",
                            "description": "MQTT user-property value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "KAFKA"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "The Apache Kafka message metadata constraints",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "The Apache Kafka topic"
                    },
                    "partition": {
                      "type": "integer",
                      "description": "The Apache Kafka partition"
                    },
                    "key": {
                      "type": "string",
                      "description": "The Apache Kafka key"
                    },
                    "headers": {
                      "type": "object",
                      "description": "The Apache Kafka headers",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The Apache Kafka header name"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string",
                            "description": "The Apache Kafka header value"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "The Apache Kafka header required"
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "The Apache Kafka timestamp"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                  "enum": [
                    "HTTP"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "The HTTP message metadata constraints",
                  "properties": {
                    "headers": {
                      "type": "array",
                      "description": "The HTTP headers",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The HTTP header name"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string",
                            "description": "The HTTP header value"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "The HTTP header required"
                          }
                        }
                      }
                    },
                    "query": {
                      "type": "array",
                      "description": "The HTTP query parameters",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The HTTP query parameter"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string",
                            "description": "The HTTP query parameter value"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "The HTTP query parameter required"
                          }
                        }
                      }
                    },
                    "path": {
                      "type": "string",
                      "description": "The HTTP path as a uri template"
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            }
          ]
        }
      ]
    },
    "endpoint": {
      "type": "object",
      "properties": {
        "endpointid": {
          "type": "string",
          "description": "ID of the endpoint object"
        },
        "name": {
          "type": "string",
          "description": "Name of the object"
        },
        "epoch": {
          "type": "integer",
          "description": "Epoch time of the object creation"
        },
        "self": {
          "type": "string",
          "format": "uri",
          "description": "URL of the object"
        },
        "xid": {
          "type": "string",
          "format": "uri",
          "description": "Relative URL of the object"
        },
        "description": {
          "type": "string",
          "description": "Description of the object"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "URI of the documentation of the object"
        },
        "labels": {
          "type": "object",
          "description": "Labels for the object"
        },
        "createdat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object creation"
        },
        "modifiedat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object modification"
        },
        "usage": {
          "type": "string",
          "description": "Client's expected usage of this endpoint"
        },
        "channel": {
          "type": "string",
          "description": "tbd"
        },
        "deprecated": {
          "type": "object",
          "description": "tbd",
          "properties": {
            "effective": {
              "type": "string",
              "format": "date-time",
              "description": "tbd"
            },
            "removal": {
              "type": "string",
              "format": "date-time",
              "description": "tbd"
            },
            "alternative": {
              "type": "string",
              "format": "uri",
              "description": "tbd"
            },
            "docs": {
              "type": "string",
              "format": "uri",
              "description": "tbd"
            }
          }
        },
        "messagegroups": {
          "type": "array",
          "description": "The message groups that are supported by this endpoint",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "messages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/message"
          }
        }
      },
      "allOf": [
        {
          "oneOf": [
            {
              "properties": {
                "envelope": {
                  "type": "string",
                  "description": "Envelope metadata format identifier. If set, all definitions MUST use this format value",
                  "enum": [
                    "CloudEvents/1.0"
                  ]
                },
                "envelopeoptions": {
                  "type": "object",
                  "description": "Envelope metadata constraints",
                  "properties": {
                    "mode": {
                      "type": "string"
                    },
                    "format": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "envelope"
              ]
            }
          ]
        },
        {
          "oneOf": [
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Endpoint protocol identifier. If set, all definitions MUST use this protocol value",
                  "enum": [
                    "AMQP/1.0"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "Configuration information for this endpoint",
                  "properties": {
                    "endpoints": {
                      "type": "array",
                      "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "Network accessible location"
                          }
                        }
                      }
                    },
                    "authorization": {
                      "type": "array",
                      "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined"
                          },
                          "resourceuri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The resource uri for which authorization shall be granted (if applicable)"
                          },
                          "authorityuri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The authority uri where authorization shall be requested (if applicable)"
                          },
                          "granttypes": {
                            "type": "array",
                            "description": "The grant types that can be requested (if applicable)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "deployed": {
                      "type": "boolean",
                      "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                    },
                    "node": {
                      "type": "string",
                      "description": "The AMQP node name. Commonly the name of a queue or a topic"
                    },
                    "durable": {
                      "type": "boolean",
                      "description": "The AMQP durable flag. Whether the node is durable or transient"
                    },
                    "linkproperties": {
                      "type": "object",
                      "description": "An optional map of AMQP link properties to use with the endpoint",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "connectionproperties": {
                      "type": "object",
                      "description": "An optional map of AMQP connection properties to use with the endpoint",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "distributionmode": {
                      "type": "string",
                      "description": "The AMQP distribution mode for receivers. Can be 'move' or 'copy'.  A value of 'move' indicates an exclusive lock on the message. A value of 'copy' indicates a non-exclusive lock on the message"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Endpoint protocol identifier. If set, all definitions MUST use this protocol value",
                  "enum": [
                    "MQTT/5.0"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "Configuration information for this endpoint",
                  "properties": {
                    "endpoints": {
                      "type": "array",
                      "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Network accessible location"
                          }
                        }
                      }
                    },
                    "authorization": {
                      "type": "array",
                      "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined"
                          },
                          "resourceurl": {
                            "type": "string",
                            "format": "uri",
                            "description": "The resource uri for which authorization shall be granted (if applicable)"
                          },
                          "authorityuri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The authority uri where authorization shall be requested (if applicable)"
                          },
                          "granttypes": {
                            "type": "array",
                            "description": "The grant types that can be requested (if applicable)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "deployed": {
                      "type": "boolean",
                      "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                    },
                    "topic": {
                      "type": "string",
                      "description": "The MQTT topic path"
                    },
                    "qos": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "The MQTT QoS level. May be 0, 1, or 2"
                    },
                    "retain": {
                      "type": "boolean",
                      "description": "The MQTT retain flag to use for publishers on ths endpoint"
                    },
                    "cleansession": {
                      "type": "boolean",
                      "description": "The MQTT clean session flag to use for publishers on this endpoint"
                    },
                    "willtopic": {
                      "type": "string",
                      "description": "The MQTT will topic to configure for publishers on this endpoint"
                    },
                    "willmessage": {
                      "type": "string",
                      "description": "The MQTT will message definition to configure for publishers on this endpoint"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Endpoint protocol identifier. If set, all definitions MUST use this protocol value",
                  "enum": [
                    "MQTT/3.1.1"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "Configuration information for this endpoint",
                  "properties": {
                    "endpoints": {
                      "type": "array",
                      "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Network accessible location"
                          }
                        }
                      }
                    },
                    "authorization": {
                      "type": "array",
                      "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined"
                          },
                          "resourceurl": {
                            "type": "string",
                            "format": "uri",
                            "description": "The resource uri for which authorization shall be granted (if applicable)"
                          },
                          "authorityuri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The authority uri where authorization shall be requested (if applicable)"
                          },
                          "granttypes": {
                            "type": "array",
                            "description": "The grant types that can be requested (if applicable)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "deployed": {
                      "type": "boolean",
                      "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                    },
                    "topic": {
                      "type": "string",
                      "description": "MQTT topic path"
                    },
                    "qos": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "The MQTT QoS level. May be 0, 1, or 2"
                    },
                    "retain": {
                      "type": "boolean",
                      "description": "The MQTT retain flag to use for publishers on ths endpoint"
                    },
                    "cleansession": {
                      "type": "boolean",
                      "description": "The MQTT clean session flag to use for publishers on this endpoint"
                    },
                    "willtopic": {
                      "type": "string",
                      "description": "The MQTT will topic to configure for publishers on this endpoint"
                    },
                    "willmessage": {
                      "type": "string",
                      "description": "The MQTT will message definition to configure for publishers on this endpoint"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Endpoint protocol identifier. If set, all definitions MUST use this protocol value",
                  "enum": [
                    "HTTP"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "Configuration information for this endpoint",
                  "properties": {
                    "endpoints": {
                      "type": "array",
                      "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Network accessible location"
                          }
                        }
                      }
                    },
                    "authorization": {
                      "type": "array",
                      "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined"
                          },
                          "resourceurl": {
                            "type": "string",
                            "format": "uri",
                            "description": "The resource uri for which authorization shall be granted (if applicable)"
                          },
                          "authorityuri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The authority uri where authorization shall be requested (if applicable)"
                          },
                          "granttypes": {
                            "type": "array",
                            "description": "The grant types that can be requested (if applicable)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "deployed": {
                      "type": "boolean",
                      "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method name"
                    },
                    "headers": {
                      "type": "array",
                      "description": "HTTP headers to use with the endpoint. The same header may be specified multiple times with different values. The HTTP header names are case insensitive",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "HTTP header name"
                          },
                          "value": {
                            "type": "string",
                            "description": "HTTP header value"
                          }
                        }
                      }
                    },
                    "query": {
                      "type": "object",
                      "description": "HTTP query parameters",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Endpoint protocol identifier. If set, all definitions MUST use this protocol value",
                  "enum": [
                    "KAFKA"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "Configuration information for this endpoint",
                  "properties": {
                    "endpoints": {
                      "type": "array",
                      "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Network accessible location"
                          }
                        }
                      }
                    },
                    "authorization": {
                      "type": "array",
                      "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined"
                          },
                          "resourceurl": {
                            "type": "string",
                            "format": "uri",
                            "description": "The resource uri for which authorization shall be granted (if applicable)"
                          },
                          "authorityuri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The authority uri where authorization shall be requested (if applicable)"
                          },
                          "granttypes": {
                            "type": "array",
                            "description": "The grant types that can be requested (if applicable)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "deployed": {
                      "type": "boolean",
                      "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                    },
                    "topic": {
                      "type": "string",
                      "description": "Apache Kafka topic name"
                    },
                    "acks": {
                      "type": "integer",
                      "description": "The Apache Kafka acks setting to use. If no acks setting is specified, the default is -1"
                    },
                    "key": {
                      "type": "string",
                      "description": "The Apache Kafka record key"
                    },
                    "partition": {
                      "type": "integer",
                      "description": "The Apache Kafka partition number to use when writing to or receiving from Apache Kafka"
                    },
                    "consumergroup": {
                      "type": "string",
                      "description": "The Apache Kafka consumer group name to use for consumers"
                    },
                    "headers": {
                      "type": "object",
                      "description": "The Apache Kafka headers for publishers on this endpoint",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "Endpoint protocol identifier. If set, all definitions MUST use this protocol value",
                  "enum": [
                    "NATS"
                  ]
                },
                "protocoloptions": {
                  "type": "object",
                  "description": "Configuration information for this endpoint",
                  "properties": {
                    "endpoints": {
                      "type": "array",
                      "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Network accessible location"
                          }
                        }
                      }
                    },
                    "authorization": {
                      "type": "array",
                      "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined"
                          },
                          "resourceurl": {
                            "type": "string",
                            "format": "uri",
                            "description": "The resource uri for which authorization shall be granted (if applicable)"
                          },
                          "authorityuri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The authority uri where authorization shall be requested (if applicable)"
                          },
                          "granttypes": {
                            "type": "array",
                            "description": "The grant types that can be requested (if applicable)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "deployed": {
                      "type": "boolean",
                      "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                    },
                    "subject": {
                      "type": "string",
                      "description": "The NATS subject"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            }
          ]
        }
      ]
    },
    "messagegroup": {
      "type": "object",
      "properties": {
        "messagegroupid": {
          "type": "string",
          "description": "ID of the messagegroup object"
        },
        "name": {
          "type": "string",
          "description": "Name of the object"
        },
        "epoch": {
          "type": "integer",
          "description": "Epoch time of the object creation"
        },
        "self": {
          "type": "string",
          "format": "uri",
          "description": "URL of the object"
        },
        "xid": {
          "type": "string",
          "format": "uri",
          "description": "Relative URL of the object"
        },
        "description": {
          "type": "string",
          "description": "Description of the object"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "URI of the documentation of the object"
        },
        "labels": {
          "type": "object",
          "description": "Labels for the object"
        },
        "createdat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object creation"
        },
        "modifiedat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object modification"
        },
        "envelope": {
          "type": "string",
          "description": "Envelope format identifier that defines the common metadata information for the message. All definitions in this group share this envelope format. Mixed-envelope-format groups are not permitted"
        },
        "protocol": {
          "type": "string",
          "description": "Protocol identifier that defines the transport message protocol. All definitions in this group share this protocol type. Mixed-protocol groups are not permitted"
        },
        "messages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/message"
          }
        }
      }
    },
    "schemaVersion": {
      "type": "object",
      "properties": {
        "versionid": {
          "type": "string",
          "description": "ID of the schema version"
        },
        "schemaid": {
          "type": "string",
          "description": "ID of the schema object"
        },
        "name": {
          "type": "string",
          "description": "Name of the object"
        },
        "epoch": {
          "type": "integer",
          "description": "Epoch time of the object creation"
        },
        "self": {
          "type": "string",
          "format": "uri",
          "description": "URL of the object"
        },
        "xid": {
          "type": "string",
          "format": "uri",
          "description": "Relative URL of the object"
        },
        "description": {
          "type": "string",
          "description": "Description of the object"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "URI of the documentation of the object"
        },
        "labels": {
          "type": "object",
          "description": "Labels for the object"
        },
        "createdat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object creation"
        },
        "modifiedat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object modification"
        },
        "format": {
          "type": "string",
          "description": "Schema format identifier for this schema version"
        }
      },
      "oneOf": [
        {
          "properties": {
            "schema": {
              "description": "Embedded schema object",
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "required": [
            "schema"
          ]
        },
        {
          "properties": {
            "schemabase64": {
              "description": "Embedded schema object as binary data",
              "type": "string",
              "format": "base64"
            }
          },
          "required": [
            "schemabase64"
          ]
        },
        {
          "properties": {
            "schemaurl": {
              "description": "Linked schema object",
              "type": "string",
              "format": "uri"
            }
          },
          "required": [
            "schemaurl"
          ]
        }
      ]
    },
    "schema": {
      "type": "object",
      "properties": {
        "schemaid": {
          "type": "string",
          "description": "ID of the schema object"
        },
        "name": {
          "type": "string",
          "description": "Name of the object"
        },
        "epoch": {
          "type": "integer",
          "description": "Epoch time of the object creation"
        },
        "self": {
          "type": "string",
          "format": "uri",
          "description": "URL of the object"
        },
        "xid": {
          "type": "string",
          "format": "uri",
          "description": "Relative URL of the object"
        },
        "description": {
          "type": "string",
          "description": "Description of the object"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "URI of the documentation of the object"
        },
        "labels": {
          "type": "object",
          "description": "Labels for the object"
        },
        "createdat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object creation"
        },
        "modifiedat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object modification"
        }
      },
      "oneOf": [
        {
          "properties": {
            "versionsurl": {
              "type": "string"
            },
            "versionscount": {
              "type": "integer"
            }
          },
          "required": [
            "versionsurl"
          ]
        },
        {
          "properties": {
            "versions": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/schemaVersion"
              }
            }
          },
          "required": [
            "versions"
          ]
        }
      ]
    },
    "schemagroup": {
      "type": "object",
      "properties": {
        "schemagroupid": {
          "type": "string",
          "description": "ID of the schemagroup object"
        },
        "name": {
          "type": "string",
          "description": "Name of the object"
        },
        "epoch": {
          "type": "integer",
          "description": "Epoch time of the object creation"
        },
        "self": {
          "type": "string",
          "format": "uri",
          "description": "URL of the object"
        },
        "xid": {
          "type": "string",
          "format": "uri",
          "description": "Relative URL of the object"
        },
        "description": {
          "type": "string",
          "description": "Description of the object"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "URI of the documentation of the object"
        },
        "labels": {
          "type": "object",
          "description": "Labels for the object"
        },
        "createdat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object creation"
        },
        "modifiedat": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the object modification"
        },
        "schemas": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          }
        }
      }
    }
  }
}