#!/bin/bash

# Look for any unused errors in the spec. We should probably remove them.

set -e

START_PATTERN="start-err-def"
END_PATTERN="end-err-def"

# This assumes the list of errors is in the first file name listed on the
# cmd line. Then ALL files listed will be parsed to see which errors are used.

echo "> Extracting error list from: $1"
echo "> Looking for errors usage in: $*"

# Make IFS a dummay char so we save the newlines
IFS="!" lines=$(sed -r -n "/$START_PATTERN/,/$END_PATTERN/p" $1 | \
  sed -n 's/#### //p')

[[ "$lines" == "" ]] && echo "Can't find any errors" && exit 1

readarray -t err_array <<< "$lines"
rc=0
first="UNUSED ERRORS:\n"

for err in "${err_array[@]}"; do
  ref=$(echo "$err" | tr '[:upper:]' '[:lower:]' | sed "s/ /-/g")
  grep -e "(#$ref)" -e "(\./spec\.md#$ref)" $* > /dev/null && continue

  # special case this one
  [[ "$ref" == "server_error" ]] && continue

  echo -ne $first
  first=""
  echo "- $err"
  rc=1
done

# make sure the errors are alphabetized
diff=$(IFS="!" diff <(echo "$lines") <(echo "$lines" | sort) || true)
if [[ "$diff" != "" ]] ; then
  [[ "$rc" != "0" ]] && echo
  echo "ALPHABETIZE THESE:"
  echo "$diff" | grep "> " | sed "s/> /- /"
  rc=1
fi

exit $rc
